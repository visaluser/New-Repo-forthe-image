name: Deploy Docker Application to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Build and Push Docker Image to ECR
        id: docker_build
        run: |
          COMMIT_ID=$(git rev-parse --short=7 ${{ github.sha }})
          # Tagging the Docker image for ECR
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/visalrepository:$COMMIT_ID --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} .
          # Logging into ECR
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com
          # Pushing the Docker image to ECR
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/visalrepository:$COMMIT_ID
          echo "::set-output name=commit_id::$COMMIT_ID"
          docker images

      - name: Configure Kubernetes Context
        run: |
          aws eks --region us-west-2 update-kubeconfig --name visal-cluster

      - name: Update application.yml
        run: |
          sed -i "s|image: visalmk/docker-image:latest|image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/visalrepository:${{ steps.docker_build.outputs.commit_id }}|" application.yml

      - name: Deploy to EKS
        run: |
          kubectl delete -f application.yml
          kubectl apply -f mysql.yaml
         # kubectl delete -f ingress.yaml
